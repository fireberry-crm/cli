name: Publish Fireberry CLI to npm

on:
  workflow_dispatch:
    inputs:
      type:
        description: "Publish type"
        required: true
        type: choice
        options:
          - beta
          - production
      version:
        description: "Version bump (for production only)"
        required: false
        type: choice
        options:
          - prerelease
          - patch
          - minor
          - major
        default: patch

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment:
      name: npm
      url: https://registry.npmjs.org

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"
          cache: "npm"
          cache-dependency-path: ${{ github.workspace }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Update version (Beta)
        if: github.event.inputs.type == 'beta'
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [[ $CURRENT_VERSION == *"-beta."* ]]; then
            npm version prerelease --preid=beta --no-git-tag-version
          else
            npm version prepatch --preid=beta --no-git-tag-version
          fi

      - name: Update version (Production)
        if: github.event.inputs.type == 'production'
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Build package
        run: npm run build --if-present

      - name: Run tests
        run: npm test

      - name: Update npm to latest version
        run: npm install -g npm@latest

      - name: Publish to npm (Beta)
        if: github.event.inputs.type == 'beta'
        run: npm publish --tag beta --provenance --access public

      - name: Publish to npm (Production)
        if: github.event.inputs.type == 'production'
        run: npm publish --tag latest --provenance --access public
